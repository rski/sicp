(define (exp-cons a b)
  (* (expt 2 a)
     (expt 3 b)))

(define (repeated-div x d)
  (define (r-d x acc)
    (if (= (remainder x d) 0) (r-d (/ x d) (+ 1 acc))
        acc))
  (r-d x 0))

(define (exp-car pair)
  (repeated-div pair 2))
(define (exp-cdr pair)
  (repeated-div pair 3))
(newline)
(display (repeated-div 36 2))
(newline)
(display (repeated-div (* 36 3 3) 3))
(newline)
(define mypair (exp-cons 7 5))
(display mypair)
(newline)
(display (exp-cdr mypair))
(newline)
(display (exp-car mypair))
